{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["QUESTION","ANSWER","CORRECT","stripSpaces","s","t","i","length","parse","regex","desc","_s$trim$split","trim","split","_s$trim$split2","Object","slicedToArray","l","r","undefined","a","concat","toConsumableArray","test","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleQuestionChange","event","setState","question","target","value","handleAnswerChange","answer","state","v","qp","ap","sumL","parseInt","sumR","d","q","j","verdict","react_default","createElement","class","startsWith","size","type","onChange","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"8OAGMA,SAAW,cACXC,EAAS,WACTC,EAAU,WA4ChB,SAASC,EAAYC,GAEnB,IADA,IAAIC,EAAI,GACCC,EAAI,EAAGA,EAAIF,EAAEG,OAAQD,IACf,MAATF,EAAEE,KAAYD,GAAKD,EAAEE,IAE3B,OAAOD,EAGT,SAASG,EAAMJ,EAAGK,EAAOC,GAAM,IAAAC,EACdP,EAAEQ,OAAOC,MAAM,YAAa,GADdC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GACtBM,EADsBH,EAAA,GACnBI,EADmBJ,EAAA,GAE7B,QAAUK,IAAND,EAAiB,MAAO,cAE5B,IADA,IAAME,EAAC,GAAAC,OAAAN,OAAAO,EAAA,EAAAP,CAAOE,EAAEJ,MAAM,gBAAf,CAA+BK,IAC7BZ,EAAI,EAAGA,EAAIc,EAAEb,OAAQD,IAE5B,GADAc,EAAEd,GAAKH,EAAYiB,EAAEd,KAChBG,EAAMc,KAAKH,EAAEd,IAAK,OAAOI,EAAO,gBAAkBU,EAAEd,GAAK,iBAAmBA,EAAI,GAEvF,OAAOc,EAiCMI,kBA1Fb,SAAAA,IAAc,IAAAC,EAAA,OAAAV,OAAAW,EAAA,EAAAX,CAAAY,KAAAH,IACZC,EAAAV,OAAAa,EAAA,EAAAb,CAAAY,KAAAZ,OAAAc,EAAA,EAAAd,CAAAS,GAAAM,KAAAH,QAOFI,qBAAuB,SAACC,GACtBP,EAAKQ,SAAS,CAAEC,SAAUF,EAAMG,OAAOC,SAT3BX,EAYdY,mBAAqB,SAACL,GACpBP,EAAKQ,SAAS,CAAEK,OAASN,EAAMG,OAAOC,SAXtCX,EAAKc,MAAQ,CACXL,SAAU,sBACVI,OAAQ,IAJEb,wEAiBZ,IAAMe,EA2CV,SAAiBN,EAAUI,GACzB,IAAMG,EAAKjC,EAAM0B,EAAU,WAAY,+BACvC,GAAiB,iBAANO,EAAgB,OAAOzC,EAAWyC,EAC7C,IAAMC,EAAKlC,EAAM8B,EAAQ,gBAAiB,oBAC1C,GAAiB,iBAANI,EAAgB,OAAOzC,EAASyC,EAC3C,GAAIA,EAAGnC,SAAWkC,EAAGlC,OAAQ,OAAON,EAAS,YAAcwC,EAAGlC,OAAS,WAEvE,IADA,IAAIoC,EAAO,EACFrC,EAAI,EAAGA,EAAIoC,EAAGnC,OAAS,EAAGD,IACjCqC,GAAQC,SAASF,EAAGpC,IAEtB,IAAMuC,EAAOD,SAASF,EAAGA,EAAGnC,OAAS,IACrC,GAAIoC,IAASE,EAAM,OAAO5C,EAAS,2BAA6B0C,EAAO,OAASE,EAGhF,IAFA,IAAMC,EAAI,GACJ7B,EAAI,GACDX,EAAI,EAAGA,EAAImC,EAAGlC,OAAQD,IAAK,CAClC,IAAMyC,EAAIN,EAAGnC,GACPc,EAAIsB,EAAGpC,GACb,GAAIc,EAAEb,SAAWwC,EAAExC,OAAQ,OAAON,EAAS,oBAAsBmB,EAAEb,OAAS,OAASwC,EAAExC,OAAS,gBAAkBD,EAAI,GACtH,IAAK,IAAI0C,EAAI,EAAGA,EAAID,EAAExC,OAAQyC,IAAK,CACjC,QAAgB7B,IAAZ2B,EAAEC,EAAEC,KAAqBF,EAAEC,EAAEC,MAAQ5B,EAAE4B,GACzC,OAAO/C,EAAS,eAAiBmB,EAAE4B,GAAK,UAAYF,EAAEC,EAAEC,IAAM,+BAAiCD,EAAEC,GAAK,IACxG,QAAgB7B,IAAZF,EAAEG,EAAE4B,KAAqB/B,EAAEG,EAAE4B,MAAQD,EAAEC,GACzC,OAAO/C,EAAS,gBAAkB8C,EAAEC,GAAK,UAAY/B,EAAEG,EAAE4B,IAAM,8BAAgC5B,EAAE4B,GAAK,IACxGF,EAAEC,EAAEC,IAAM5B,EAAE4B,GACZ/B,EAAEG,EAAE4B,IAAMD,EAAEC,IAGhB,OAAO9C,EAtEK+C,CAAQtB,KAAKY,MAAML,SAAUP,KAAKY,MAAMD,QAClD,OACEY,EAAA9B,EAAA+B,cAAA,aACED,EAAA9B,EAAA+B,cAAA,aACED,EAAA9B,EAAA+B,cAAA,UACED,EAAA9B,EAAA+B,cAAA,uBACAD,EAAA9B,EAAA+B,cAAA,UAAID,EAAA9B,EAAA+B,cAAA,SAAOC,MAAOZ,EAAEa,WAAWrD,GAAY,QAAU,GAC1CsD,KAAK,KAAKC,KAAK,OAAOnB,MAAOT,KAAKY,MAAML,SAAUsB,SAAU7B,KAAKI,yBAE9EmB,EAAA9B,EAAA+B,cAAA,UACED,EAAA9B,EAAA+B,cAAA,qBACAD,EAAA9B,EAAA+B,cAAA,UAAID,EAAA9B,EAAA+B,cAAA,SAAOC,MAAOZ,EAAEa,WAAWpD,GAAU,QAAU,GACxCqD,KAAK,KAAKC,KAAK,OAAOnB,MAAOT,KAAKY,MAAMD,OAAQkB,SAAU7B,KAAKU,uBAE5Ea,EAAA9B,EAAA+B,cAAA,UACED,EAAA9B,EAAA+B,cAAA,sBACAD,EAAA9B,EAAA+B,cAAA,MAAIC,MAAOZ,IAAMtC,EAAU,UAAY,IAAKsC,aAlCtCiB,aCKZC,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBlC,QACf4B,UAAUC,cAAcQ,YAI1BC,QAAQC,IACN,iHAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAASR,KAMlBM,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUT,UAO5BU,MAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,KC3FjEC,IAASC,OAAOlC,EAAA9B,EAAA+B,cAACkC,EAAD,MAASC,SAASC,eAAe,SDiB1C,SAAkBrB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIqB,IAAIC,iBAAwB7B,OAAOC,SAAS6B,MACpDC,SAAW/B,OAAOC,SAAS8B,OAIvC,OAGF/B,OAAOgC,iBAAiB,OAAQ,WAC9B,IAAM3B,EAAK,GAAA5C,OAAMoE,iBAAN,sBAEP/B,GAgEV,SAAiCO,EAAOC,GAEtC2B,MAAM5B,GACHK,KAAK,SAAAwB,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5ChC,UAAUC,cAAcgC,MAAM9B,KAAK,SAAAC,GACjCA,EAAa8B,aAAa/B,KAAK,WAC7BV,OAAOC,SAASyC,aAKpBtC,EAAgBC,EAAOC,KAG1Be,MAAM,WACLJ,QAAQC,IACN,mEArFAyB,CAAwBtC,EAAOC,GAI/BC,UAAUC,cAAcgC,MAAM9B,KAAK,WACjCO,QAAQC,IACN,gHAMJd,EAAgBC,EAAOC,MCxC/BE","file":"static/js/main.9d1528ca.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nconst QUESTION = \"Question: \";\nconst ANSWER = \"Answer: \";\nconst CORRECT = \"CORRECT!\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      question: 'SEND + MORE = MONEY',\n      answer: '',\n    };\n  }\n\n  handleQuestionChange = (event) => {\n    this.setState({ question: event.target.value })\n  };\n\n  handleAnswerChange = (event) => {\n    this.setState({ answer : event.target.value });\n  };\n\n  render() {\n    const v = verdict(this.state.question, this.state.answer);\n    return (\n      <table>\n        <tbody>\n          <tr>\n            <td>Question:</td>\n            <td><input class={v.startsWith(QUESTION) ? \"error\" : \"\"}\n                       size=\"50\" type=\"text\" value={this.state.question} onChange={this.handleQuestionChange}/></td>\n          </tr>\n          <tr>\n            <td>Answer:</td>\n            <td><input class={v.startsWith(ANSWER) ? \"error\" : \"\"}\n                       size=\"50\" type=\"text\" value={this.state.answer} onChange={this.handleAnswerChange}/></td>\n          </tr>\n          <tr>\n            <td>Verdict:</td>\n            <td class={v === CORRECT ? \"correct\" : \"\"}>{v}</td>\n          </tr>\n        </tbody>\n      </table>\n    );\n  }\n}\n\nfunction stripSpaces(s) {\n  let t = '';\n  for (let i = 0; i < s.length; i++) {\n    if (s[i] !== ' ') t += s[i];\n  }\n  return t;\n}\n\nfunction parse(s, regex, desc) {\n  const [l, r] = s.trim().split(/[ ]*=[ ]*/, 2);\n  if (r === undefined) return \"Missing `=`\";\n  const a = [...l.split(/[ ]*[+][ ]*/), r];\n  for (let i = 0; i < a.length; i++) {\n    a[i] = stripSpaces(a[i]);\n    if (!regex.test(a[i])) return desc + \", but found '\" + a[i] + \"' in number #\" + (i + 1);\n  }\n  return a;\n}\n\nfunction verdict(question, answer) {\n  const qp = parse(question, /^[A-Z]+$/, \"expected upper-case letters\");\n  if (typeof qp == \"string\") return QUESTION + qp;\n  const ap = parse(answer, /^[1-9][0-9]*$/, \"expected numbers\");\n  if (typeof ap == \"string\") return ANSWER + ap;\n  if (ap.length !== qp.length) return ANSWER + \"expected \" + qp.length + \" numbers\";\n  let sumL = 0;\n  for (let i = 0; i < ap.length - 1; i++) {\n    sumL += parseInt(ap[i]);\n  }\n  const sumR = parseInt(ap[ap.length - 1]);\n  if (sumL !== sumR) return ANSWER + \"the sum is not correct: \" + sumL + \" != \" + sumR;\n  const d = {};\n  const l = {};\n  for (let i = 0; i < qp.length; i++) {\n    const q = qp[i];\n    const a = ap[i];\n    if (a.length !== q.length) return ANSWER + \"incorrect length \" + a.length + \" != \" + q.length + \" in number #\" + (i + 1);\n    for (let j = 0; j < q.length; j++) {\n      if (d[q[j]] !== undefined && d[q[j]] !== a[j])\n        return ANSWER + \"two digits '\" + a[j] + \"' and '\" + d[q[j]] + \"' used for the same letter '\" + q[j] + \"'\";\n      if (l[a[j]] !== undefined && l[a[j]] !== q[j])\n        return ANSWER + \"two letters '\" + q[j] + \"' and '\" + l[a[j]] + \"' used for the same digit '\" + a[j] + \"'\";\n      d[q[j]] = a[j];\n      l[a[j]] = q[j];\n    }\n  }\n  return CORRECT;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}